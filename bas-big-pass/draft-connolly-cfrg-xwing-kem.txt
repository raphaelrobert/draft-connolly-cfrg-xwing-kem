



Crypto Forum                                                 D. Connolly
Internet-Draft                                                 SandboxAQ
Intended status: Informational                                P. Schwabe
Expires: 11 May 2024                         MPI-SP & Radboud University
                                                        B. E. Westerbaan
                                                              Cloudflare
                                                         8 November 2023


            X-Wing: general-purpose hybrid post-quantum KEM
                  draft-connolly-cfrg-xwing-kem-latest

Abstract

   This memo defines X-Wing, a general-purpose post-quantum/traditional
   hybrid key encapsulation mechanism (PQ/T KEM) built on X25519 and ML-
   KEM-768.

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://dconnolly.github.io/draft-connolly-cfrg-xwing-kem/draft-
   connolly-cfrg-xwing-kem.html.  Status information for this document
   may be found at https://datatracker.ietf.org/doc/draft-connolly-cfrg-
   xwing-kem/.

   Discussion of this document takes place on the Crypto Forum Research
   Group mailing list (mailto:cfrg@ietf.org), which is archived at
   https://mailarchive.ietf.org/arch/search/?email_list=cfrg.  Subscribe
   at https://www.ietf.org/mailman/listinfo/cfrg/.

   Source for this draft and an issue tracker can be found at
   https://github.com/dconnolly/draft-connolly-cfrg-xwing-kem.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 11 May 2024.

Copyright Notice

   Copyright (c) 2023 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.

Table of Contents

   1.  Introduction
     1.1.  Warning: ML-KEM-768 has not been standardised
     1.2.  Motivation
     1.3.  Design goals
     1.4.  Not an interactive key-agreement
     1.5.  Not an authenticated KEM
     1.6.  Comparisons
       1.6.1.  With HPKE X25519Kyber768Draft00
       1.6.2.  With generic combiner
   2.  Requirements Notation
   3.  Conventions and Definitions
   4.  Cryptographic Dependencies
   5.  X-Wing Construction
     5.1.  Encoding and sizes
     5.2.  Key derivation
     5.3.  Combiner
     5.4.  Encapsulation
     5.5.  Decapsulation
     5.6.  Use in HPKE
     5.7.  Use in TLS 1.3
   6.  Security Considerations
   7.  IANA Considerations
   8.  TODO
   9.  References
     9.1.  Normative References
     9.2.  Informative References
   Acknowledgments
   Authors' Addresses

1.  Introduction

1.1.  Warning: ML-KEM-768 has not been standardised

   X-Wing uses ML-KEM-768, which has not been standardised yet.  Thus
   X-Wing is not finished, yet, and should not be used, yet.

1.2.  Motivation

   There are many choices that can be made when specifying a hybrid KEM:
   the constituent KEMs; their security levels; the combiner; and the
   hash within, to name but a few.  Having too many similar options are
   a burden to the ecosystem.

   The aim of X-Wing is to provide a concrete, simple choice for post-
   quantum hybrid KEM, that should be suitable for the vast majority of
   use cases.

1.3.  Design goals

   By making concrete choices, we can simplify and improve many aspects
   of X-Wing.

   *  Simplicity of definition.  Because all shared secrets and cipher
      texts are fixed length, we do not need to encode the length.
      Using SHA3-256, we do not need HMAC-based construction.  For the
      concrete choice of ML-KEM-768, we do not need to mix in its
      ciphertext, see Section 6.

   *  Security analysis.  Because ML-KEM-768 already assumes QROM, we do
      not need to complicate the analysis of X-Wing by considering
      stronger models.

   *  Performance.  Not having to mix in the ML-KEM-768 ciphertext is a
      nice performance benefit.  Furthermore, by using SHA3-256 in the
      combiner, which matches the hashing in ML-KEM-768, this hash can
      be computed in one go on platforms where two-way Keccak is
      available.

   We aim for "128 bits" security (NIST PQC level 1).  Although at the
   moment there is no peer-reviewed evidence that ML-KEM-512 does not
   reach this level, we would like to hedge against future cryptanalytic
   improvements, and feel ML-KEM-768 provides a comfortable margin.

   We aim for X-Wing to be usable for most applications, including
   specifically HPKE [RFC9180].

1.4.  Not an interactive key-agreement

   Traditionally most protocols use a Diffie-Hellman (DH) style non-
   interactive key-agreement.  In many cases, a DH key agreement can be
   replaced by the interactive key-agreement afforded by a KEM without
   change in the protocol flow.  One notable example is TLS [HYBRID]
   [XYBERTLS].  However, not all uses of DH can be replaced in a
   straight-forward manner by a plain KEM.

1.5.  Not an authenticated KEM

   In particular, X-Wing is not, borrowing the language of [RFC9180], an
   _authenticated_ KEM.

1.6.  Comparisons

1.6.1.  With HPKE X25519Kyber768Draft00

   X-Wing is most similar to HPKE's X25519Kyber768Draft00 [XYBERHPKE].
   The key differences are:

   *  X-Wing uses the final version of ML-KEM-768.

   *  X-Wing hashes the shared secrets, to be usable outside of HPKE.

   *  X-Wing has a simpler combiner by flattening DHKEM(X25519) into the
      final hash.

   *  X-Wing does not hash in the ML-KEM-768 ciphertext.

   There is also a different KEM called X25519Kyber768Draft00 [XYBERTLS]
   which is used in TLS.  This one should not be used outside of TLS, as
   it assumes the presence of the TLS transcript to ensure non
   malleability.

1.6.2.  With generic combiner

   The generic combiner of [I-D.ounsworth-cfrg-kem-combiners] can be
   instantiated with ML-KEM-768 and DHKEM(X25519).  That achieves
   similar security, but:

   *  X-Wing is more performant, not hashing in the ML-KEM-768
      ciphertext, and flattening the DHKEM construction, with the same
      level of security.

   *  X-Wing has a fixed 32 byte shared secret, instead of a variable
      shared secret.

   *  X-Wing does not accept the optional counter and fixedInfo
      arguments.

2.  Requirements Notation

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Conventions and Definitions

   This document is consistent with all terminology defined in
   [I-D.driscoll-pqt-hybrid-terminology].

   The following terms are used throughout this document to describe the
   operations, roles, and behaviors of HPKE:

   *  concat(x0, ..., xN): returns the concatenation of byte strings.
      concat(0x01, 0x0203, 0x040506) = 0x010203040506.

   *  random(n): return a pseudorandom byte string of length n bytes
      produced by a cryptographically-secure random number generator.

4.  Cryptographic Dependencies

   X-Wing relies on the following primitives:

   *  ML-KEM-768 post-quantum key-encapsulation mechanism (KEM), TODO
      ref:

      -  ML-KEM-768.DeriveKeyPair(ikm): Deterministic algorithm to
         derive an ML-KEM-768 key pair (sk_M, pk_M) from entropy ikm.

      -  ML-KEM-768.Encapsulate(pk_M): Randomized algorithm to generate
         (ss_M, ct_M), an ephemeral 32 byte shared key ss_M, and a
         fixed-length encapsulation (cipher text) of that key ct_M for
         pk_M.

      -  ML-KEM-768.Decap(ct_M, sk_M): Deterministic algorithm using the
         private key sk_M to recover the shared key from ct_M.

   *  X25519 elliptic curve Diffie-Hellman key-exchange defined in
      Section 5 of [RFC7748]:

      -  X25519(k,u): takes 32 byte strings k and u representing a
         Curve25519 scalar and curvepoint respectively, and returns the
         32 byte string representing their scalar multiplication.

      -  X25519_BASE: the 32 byte string representing the standard base
         point of Curve25519.  In hex it is given by
         09000000000000000000000000000000000000000000.

   Note that 9 is the standard basepoint for X25519, cf Section 6.1 of
   [RFC7748].

   *  Symmetric cryptography.

      -  SHAKE128(message, outlen): The extendable-output function (XOF)
         defined in Section 6.2 of [FIPS202].

      -  SHA3-256(message): The hash defined in defined in Section 6.1
         of [FIPS202].

5.  X-Wing Construction

5.1.  Encoding and sizes

   X-Wing public key, private key, ciphertexts and shared secrets are
   all fixed length byte strings.

   Private key:  2432 bytes

   Public key:  1216 bytes

   Cipher text:  1120 bytes

   Shared secret:  32 bytes

5.2.  Key derivation

   An X-Wing keypair (private key, public key) is derived from entropy
   as follows.

   def DeriveKeyPair(ikm):
     seed = SHAKE128(ikm, 96)
     seed1 = seed[0:32]
     seed2 = seed[32:96]
     (sk1, pk1) = X25519(seed1, X25519_BASE)
     (sk2, pk2) = ML-KEM-768.DeriveKeyPair(seed2)
     return concat(sk1, sk2), concat(pk1, pk2)

   def GenerateKeyPair():
     return DeriveKeyPair(random(32))

   ikm SHOULD be at least 32 bytes in length.

5.3.  Combiner

   Given 32 byte strings ss_M, ss_X, ct_X, pk_X, representing the ML-
   KEM-768 shared secret, X25519 shared secret, X25519 cipher text
   (ephemeral public key) and X25519 public key respectively, the
   combined shared secret is given by:

   def Combiner(ss_M, ss_X, ct_X, pk_X):
     return SHA3-256(concat(
       XWingDS,
       ss_M,
       ss_X,
       ct_X,
       pk_X
     ))

   where XWingDS is the following 8 byte ASCII string

   XWingDS = concat(
       "\oo/",
       "/oo\",
   )

5.4.  Encapsulation

   Given an X-Wing public key pk, encapsulation proceeds as follows.

   def Encapsulate(pk):
     pk_M = pk[0:1184]
     pk_X = pk[1184:1216]
     ek_X = random(32)
     ct_X = X25519(ek_X, X25519_BASE)
     ss_X = X25519(ek_X, pk_X)
     (ss_M, ct_M) = ML-KEM-768.Encapsulate(pk_M)
     ss = Combiner(ss_M, ss_X, ct_X, pk_X)
     ct = concat(ct_M, ct_X)
     return (ss, ct)

5.5.  Decapsulation

   def Decapsulate(ct, sk, pk):
     ct_M = ct[0:1088]
     ct_X = ct[1088:1120]
     sk_M = sk[0:2400]
     sk_X = sk[2400:2432]
     pk_M = pk[0:1184]
     pk_X = pk[1184:1216]
     ss_M = ML-KEM-768.Decapsulate(ct_M, sk_M)
     ss_X = X25519(sk_X, ct_X)
     return Combiner(ss_M, ss_X, ct_X, pk_X)

5.6.  Use in HPKE

   X-Wing satisfies the HPKE KEM interface as follows.

   The SerializePublicKey, DeserializePublicKey, SerializePrivateKey and
   DeserializePrivateKey are the identity functions, as X-Wing keys are
   fixed-length byte strings, see Section 5.1.

   DeriveKeyPair is DeriveKeyPair from Section 5.2.  The argument ikm to
   DeriveKeyPair SHOULD be at least 32 octets in length.  (This is
   contrary to [RFC9180] which stipulates it should be at least Nsk=2432
   octets in length.)

   Encap is Encapsulate from Section 5.4.

   Decap is Decapsulate from Section 5.5.

   X-Wing is not an authenticated KEM: it does not support AuthEncap()
   and AuthDecap(), see Section 1.5.

   Nsecret, Nenc, Npk, and Nsk are defined in Section 7.

5.7.  Use in TLS 1.3

   For the client's share, the key_exchange value contains the X-Wing
   public key.

   For the server's share, the key_exchange value contains the X-Wing
   cipher text.

6.  Security Considerations

   Informally, X-Wing is secure if SHA3 is secure, and either X25519 is
   secure, or ML-KEM-768 is secure.

   More precisely, if SHA3-256, SHA3-512, SHAKE-128, and SHAKE-256 may
   be modelled as a random oracle, then the IND-CCA security of X-Wing
   is bounded by the IND-CCA security of ML-KEM-768, and the gap-CDH
   security of Curve25519, see TODO.

   The security of X-Wing relies crucially on the specifics of the
   Fujisaki-Okamoto transformation used in ML-KEM-768.  In particular,
   the X-Wing combiner cannot be assumed to be secure, when used with
   different KEMs.

7.  IANA Considerations

   This document requests/registers a new entry to the "HPKE KEM
   Identifiers" registry.

   Value:  TBD (please)

   KEM:  X-Wing

   Nsecret:  32

   Nenc:  1120

   Npk:  1216

   Nsk:  2432

   Auth:  no

   Reference:  This document

   Furthermore, this document requests/registers a new entry to the TLS
   Named Group (or Supported Group) registry, according to the
   procedures in Section 6 of [TLSIANA].

   Value:  TBD (please)

   Description:  X-Wing

   DTLS-OK:  Y

   Recommended:  Y

   Reference:  This document

   Comment:  PQ/T hybrid of X25519 and ML-KEM-768

8.  TODO

   *  Which validation do we want to require?

9.  References

9.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

9.2.  Informative References

   [FIPS202]  National Institute of Standards and Technology, "FIPS 202:
              SHA-3 Standard: Permutation-Based Hash and Extendable-
              Output Functions", n.d.,
              <https://nvlpubs.nist.gov/nistpubs/FIPS/
              NIST.FIPS.202.pdf>.

   [H2CURVE]  Faz-Hernandez, A., Scott, S., Sullivan, N., Wahby, R. S.,
              and C. A. Wood, "Hashing to Elliptic Curves", Work in
              Progress, Internet-Draft, draft-irtf-cfrg-hash-to-curve-
              16, 15 June 2022, <https://datatracker.ietf.org/doc/html/
              draft-irtf-cfrg-hash-to-curve-16>.

   [HASHEDDH] Julien Duman, Dominik Hartmann, Eike Kiltz, Sabrina
              Kunzweiler, Jonas Lehmann, and Doreen Riepel, "Group
              Action Key Encapsulation and Non-Interactive Key Exchange
              in the QROM", n.d.,
              <https://eprint.iacr.org/2022/1230.pdf>.

   [HYBRID]   Stebila, D., Fluhrer, S., and S. Gueron, "Hybrid key
              exchange in TLS 1.3", Work in Progress, Internet-Draft,
              draft-stebila-tls-hybrid-design-03, 12 February 2020,
              <https://datatracker.ietf.org/doc/html/draft-stebila-tls-
              hybrid-design-03>.

   [I-D.driscoll-pqt-hybrid-terminology]
              D, F., "Terminology for Post-Quantum Traditional Hybrid
              Schemes", Work in Progress, Internet-Draft, draft-
              driscoll-pqt-hybrid-terminology-02, 7 March 2023,
              <https://datatracker.ietf.org/doc/html/draft-driscoll-pqt-
              hybrid-terminology-02>.

   [I-D.ietf-tls-hybrid-design]
              Stebila, D., Fluhrer, S., and S. Gueron, "Hybrid key
              exchange in TLS 1.3", Work in Progress, Internet-Draft,
              draft-ietf-tls-hybrid-design-09, 7 September 2023,
              <https://datatracker.ietf.org/doc/html/draft-ietf-tls-
              hybrid-design-09>.

   [I-D.ounsworth-cfrg-kem-combiners]
              Ounsworth, M., Wussler, A., and S. Kousidis, "Combiner
              function for hybrid key encapsulation mechanisms (Hybrid
              KEMs)", Work in Progress, Internet-Draft, draft-ounsworth-
              cfrg-kem-combiners-04, 8 July 2023,
              <https://datatracker.ietf.org/doc/html/draft-ounsworth-
              cfrg-kem-combiners-04>.

   [KYBERV302]
              Avanzi, R., Bos, J., Ducas, L., Kiltz, E., Lepoint, T.,
              Lyubashevsky, V., Schanck, J., Schwabe, P., Seiler, G.,
              and D. Stehle, "CRYSTALS-Kyber, Algorithm Specification
              And Supporting Documentation (version 3.02)", 2021,
              <https://pq-crystals.org/kyber/data/kyber-specification-
              round3-20210804.pdf>.

   [MLKEM]    National Institute of Standards and Technology, "FIPS 203
              (Initial Draft): Module-Lattice-Based Key-Encapsulation
              Mechanism Standard", n.d.,
              <https://csrc.nist.gov/pubs/fips/203/ipd>.

   [NISTR3]   The NIST PQC Team, "PQC Standardization Process:
              Announcing Four Candidates to be Standardized, Plus Fourth
              Round Candidates", n.d., <https://csrc.nist.gov/News/2022/
              pqc-candidates-to-be-standardized-and-round-4>.

   [RFC7748]  Langley, A., Hamburg, M., and S. Turner, "Elliptic Curves
              for Security", RFC 7748, DOI 10.17487/RFC7748, January
              2016, <https://www.rfc-editor.org/rfc/rfc7748>.

   [RFC9180]  Barnes, R., Bhargavan, K., Lipp, B., and C. Wood, "Hybrid
              Public Key Encryption", RFC 9180, DOI 10.17487/RFC9180,
              February 2022, <https://www.rfc-editor.org/rfc/rfc9180>.

   [SECEST]   Ducas, L. and J. Schanck, "CRYSTALS security estimate
              scripts", n.d.,
              <https://github.com/pq-crystals/security-estimates>.

   [TLSIANA]  Salowey, J. A. and S. Turner, "IANA Registry Updates for
              TLS and DTLS", Work in Progress, Internet-Draft, draft-
              ietf-tls-rfc8447bis-07, 27 November 2023,
              <https://datatracker.ietf.org/doc/html/draft-ietf-tls-
              rfc8447bis-07>.

   [XYBERHPKE]
              Westerbaan, B. and C. A. Wood, "X25519Kyber768Draft00
              hybrid post-quantum KEM for HPKE", Work in Progress,
              Internet-Draft, draft-westerbaan-cfrg-hpke-xyber768d00-02,
              4 May 2023, <https://datatracker.ietf.org/doc/html/draft-
              westerbaan-cfrg-hpke-xyber768d00-02>.

   [XYBERTLS] Westerbaan, B. and D. Stebila, "X25519Kyber768Draft00
              hybrid post-quantum key agreement", Work in Progress,
              Internet-Draft, draft-tls-westerbaan-xyber768d00-03, 24
              September 2023, <https://datatracker.ietf.org/doc/html/
              draft-tls-westerbaan-xyber768d00-03>.

Acknowledgments

   TODO acknowledge.

Authors' Addresses

   Deirdre Connolly
   SandboxAQ
   Email: durumcrustulum@gmail.com


   Peter Schwabe
   MPI-SP & Radboud University
   Email: peter@cryptojedi.org


   Bas Westerbaan
   Cloudflare
   Email: bas@cloudflare.com
